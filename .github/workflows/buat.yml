name: Build single extension (src/<lang>/<extension> layout)

on:
  workflow_dispatch:
    inputs:
      lang:
        description: 'Extension language folder (contoh: en, id, es)'
        required: true
        default: 'id'
      extension:
        description: 'Extension folder/name (contoh: mangadex, komiku)'
        required: true
      git-repo:
        description: 'Optional owner/repo to checkout instead of this repo (contoh: extmod/extensions-source)'
        required: false
        default: ''
      git-ref:
        description: 'Branch / tag / sha to checkout'
        required: false
        default: 'main'
      buildType:
        description: 'Build variant'
        required: true
        type: choice
        options:
          - Debug
          - Release
        default: Debug

env:
  ANDROID_COMPILE_SDK: "28"
  BUILD_TOOLS_VERSION: "28.0.3"
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx1536m"

jobs:
  build-extension:
    runs-on: ubuntu-latest
    name: Build extension

    steps:
      - name: Checkout repository (current or specified)
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.git-repo != '' && github.event.inputs.git-repo || github.repository }}
          fetch-depth: 0
          ref: ${{ github.event.inputs.git-ref }}

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/*.gradle*','**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK 8 (Gradle 5.x compatible)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '8'
          cache: 'gradle'

      - name: Setup Android SDK (platform & build-tools)
        uses: android-actions/setup-android@v3
        with:
          api-levels: ${{ env.ANDROID_COMPILE_SDK }}
          build-tools: ${{ env.BUILD_TOOLS_VERSION }}
          components: "platform-tools,platforms;android-${{ env.ANDROID_COMPILE_SDK }}"

      - name: Ensure gradlew is executable
        run: |
          if [ -f "./gradlew" ]; then chmod +x ./gradlew; fi
          ./gradlew --version || true

      - name: Validate module folder and build
        env:
          LANG_IN: ${{ github.event.inputs.lang }}
          EXT_IN: ${{ github.event.inputs.extension }}
          BUILD_TYPE: ${{ github.event.inputs.buildType }}
        run: |
          set -euo pipefail
          echo "Inputs: lang='${LANG_IN}', extension='${EXT_IN}', buildType='${BUILD_TYPE}'"
          MODULE=":${LANG_IN}-${EXT_IN}"
          SRC_DIR="src/${LANG_IN}/${EXT_IN}"

          echo "Expecting module path: ${MODULE}"
          echo "Expecting project directory: ${SRC_DIR}"

          if [ ! -d "${SRC_DIR}" ]; then
            echo "ERROR: Directory ${SRC_DIR} not found. Available src/ listing:"
            ls -la src || true
            exit 1
          fi

          TASK="assemble${BUILD_TYPE}"
          echo "Running Gradle task from repo root: ./gradlew ${MODULE}:${TASK}"
          ./gradlew "${MODULE}:${TASK}" -x lint --no-daemon --stacktrace

      - name: Show build outputs (debug)
        run: |
          echo "Looking for outputs in module build dir and global build dirs..."
          find "src/${{ github.event.inputs.lang }}/${{ github.event.inputs.extension }}/build" -type f \( -name "*.apk" -o -name "*.aar" -o -name "*.jar" \) -print || true
          find . -type f \( -name "*.apk" -o -name "*.aar" -o -name "*.jar" \) -print || true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.lang }}-${{ github.event.inputs.extension }}-${{ github.event.inputs.buildType }}
          path: |
            src/${{ github.event.inputs.lang }}/${{ github.event.inputs.extension }}/build/outputs/**/*.apk
            src/${{ github.event.inputs.lang }}/${{ github.event.inputs.extension }}/build/outputs/**/*.aar
            **/build/outputs/**/*.apk
            **/build/outputs/**/*.aar
            **/build/libs/*.jar
          retention-days: 1
